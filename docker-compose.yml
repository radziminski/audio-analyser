version: '3.7'
services:
    router:
        restart: always
        build:
            dockerfile: Dockerfile
            context: ./router
            args:
                - NODE_API_PORT=${NODE_API_PORT}
                - REACT_CLIENT_PORT=${REACT_CLIENT_PORT}
        depends_on:
            - node-api
            - react-client
        ports:
            - 5432:5432
        ports:
            - 80:80

    postgres:
        restart: unless-stopped
        image: postgres:latest
        environment:
            - POSTGRES_PASSWORD=${PG_PASSWORD}
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
            - ./postgres/queries:/docker-entrypoint-initdb.d/
        ports:
            - 5432:5432

    pgadmin:
        image: dpage/pgadmin4
        links:
            - postgres
        depends_on:
            - postgres
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PG_ADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PG_ADMIN_DEFAULT_PASSWORD}
        ports:
            - '${PG_ADMIN_PORT}:80'
        restart: unless-stopped

    node-api:
        restart: unless-stopped
        build:
            dockerfile: Dockerfile.dev
            context: './node-api'
        volumes:
            - /app/node_modules
            - ./node-api:/app
        environment:
            - PG_USER=${PG_USER}
            - PG_PASSWORD=${PG_PASSWORD}
            - PG_HOST=${PG_HOST}
            - PG_PORT=${PG_PORT}
            - PG_DATABASE=${PG_DATABASE}
            - API_PORT=${NODE_API_PORT}
            - CHOKIDAR_USEPOLLING=true
        ports:
            - '${NODE_API_PORT}:${NODE_API_PORT}'

    react-client:
        restart: unless-stopped
        stdin_open: true
        build:
            dockerfile: Dockerfile.dev
            context: './react-client'
        volumes:
            - /app/node_modules
            - ./react-client:/app
        environment:
            - CHOKIDAR_USEPOLLING=true
        ports:
            - '${REACT_CLIENT_PORT}:${REACT_CLIENT_PORT}'
