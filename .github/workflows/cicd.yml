name: Test and deploy the application

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-and-deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      # Build the production optimized build of backend api
      - name: Build the optimized build
        run: |
          cd node-api
          docker build -t audio-analyser-api:$GITHUB_SHA .
          docker run --name builder audio-analyser-api:$GITHUB_SHA echo 'Server built.'
          docker cp builder:/app/deploy ./deploy

      # Copies necessary nginx config
      - name: Copy aws nginx config
        if: github.ref == 'refs/heads/main'
        run: |
          cd node-api/config
          cp -r . ../deploy

      # Zips the deploy package
      - name: Generate deployment package
        if: github.ref == 'refs/heads/main'
        run: |
          cd node-api/deploy
          zip -r deploy.zip . -x '*.git*'

      # Deploys the package to AWS EB
      - name: Deploy to EB
        if: github.ref == 'refs/heads/main'
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: audio-analyser
          environment_name: Audioanalyser-env
          version_label: ${{ github.run_id }}
          region: eu-central-1
          deployment_package: node-api/deploy/deploy.zip

  test-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      # Build the production optimized build of frontend client
      - name: Build the optimized build
        run: |
          cd react-client
          docker build -t audio-analyser-client:$GITHUB_SHA .
          docker run --name builder audio-analyser-client:$GITHUB_SHA echo 'Frontend built.'
          docker cp builder:/app/build ./build

      - uses: shallwefootball/s3-upload-action@master
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_CLIENT_BUCKET }}
          source_dir: 'react-client/build'
